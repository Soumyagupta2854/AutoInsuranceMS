@model List<AutoInsuranceManagementSystem.ViewModels.UserViewModel>
@{
    ViewData["Title"] = "User Management";
}

@section Styles {
    <style>
        :root {
            /* Assuming --brand-primary is defined in _Layout.cshtml */
            --table-header-bg: #f8f9fc; /* Light grey, consistent with _Layout */
            --table-row-hover-bg: #eef2f7; /* Subtle blueish hover */
            --table-border-color: #e9ecef;
            --badge-info-bg: rgba(var(--bs-info-rgb), 0.15); /* Bootstrap info with opacity */
            --badge-info-text: var(--bs-info-text-emphasis); /* Bootstrap variable */
            --button-outline-primary-hover-bg: var(--brand-primary, #2a6fdb);
            --button-outline-primary-hover-text: #fff;
        }

        .page-header h1 {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            color: #2c3e50; /* Dark blue-grey from layout */
            font-size: 2rem; /* Prominent title */
        }
        /* Create New User button styling (if uncommented later) */
        .page-header .btn-primary .bi {
            vertical-align: -0.1em;
        }


        .user-management-card {
            /* Base card styles (shadow, border, radius) should be inherited from global .card in _Layout.cshtml */
            /* Example: border-radius: 0.75rem; from _Layout */
        }

            .user-management-card .card-body {
                padding: 0; /* Remove padding if table is directly inside */
            }

        .table.align-middle th {
            font-family: 'Poppins', sans-serif;
            font-weight: 500; /* Slightly less bold than global th for a cleaner look */
            color: #495057; /* Darker grey for header text */
            background-color: var(--table-header-bg);
            border-bottom-width: 1px; /* Thinner bottom border for header */
            border-top: none; /* No top border for thead cells */
            padding: 1rem 1.25rem; /* Generous padding */
            vertical-align: middle;
        }

        .table.align-middle td {
            padding: 0.9rem 1.25rem; /* Consistent padding with header */
            vertical-align: middle;
            border-top-color: var(--table-border-color); /* Lighter border for rows */
            font-size: 0.95rem; /* Inter font */
        }

        .table.table-hover tbody tr:hover {
            background-color: var(--table-row-hover-bg) !important;
            /* color: var(--brand-primary); Optional: change text color on hover */
        }
        /* Remove bottom border from last row for cleaner look if card has padding */
        /* .table tbody tr:last-child td { border-bottom: none; } */


        .table .badge { /* Custom styling for badges in table */
            font-weight: 500; /* Inter */
            font-size: 0.8rem; /* Slightly larger than default .fs-tiny */
            padding: 0.4em 0.75em; /* More balanced padding */
        }

        .badge.bg-info-subtle.text-info-emphasis { /* From your original code for custom role */
            /* Ensure these Bootstrap 5.3 classes are available or define custom ones */
            background-color: var(--badge-info-bg) !important; /* Using CSS var */
            color: var(--badge-info-text) !important; /* Using CSS var */
        }


        .table .btn-sm {
            font-size: 0.8rem; /* Slightly smaller button text */
            padding: 0.4rem 0.9rem; /* Adjusted padding for small buttons */
            font-weight: 500; /* Inter */
        }

            .table .btn-sm .bi {
                vertical-align: -0.1em; /* Align icon */
                margin-right: 0.3rem;
            }

        .table .btn-outline-primary {
            /* Uses global btn-outline-primary from _Layout */
        }

            .table .btn-outline-primary:hover {
                background-color: var(--button-outline-primary-hover-bg); /* Ensure hover matches global if needed */
                color: var(--button-outline-primary-hover-text);
            }

        .no-users-found td {
            font-style: italic;
            color: #6c757d; /* Muted text */
        }

    </style>
}

<div class="page-header d-flex justify-content-between align-items-center mb-4">
    @* Increased margin-bottom *@
    <h1>@ViewData["Title"]</h1>
    @* <a asp-action="CreateUser" class="btn btn-primary rounded-pill px-4 py-2"><i class="bi bi-person-plus-fill me-2"></i>Create New User</a> *@
    @* Create User functionality can be added later. Adjusted padding if uncommented. *@
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show rounded-3 mb-4" role="alert">
        @* Added mb-4 *@
        @Html.Raw(TempData["SuccessMessage"])
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show rounded-3 mb-4" role="alert">
        @* Added mb-4 *@
        @Html.Raw(TempData["ErrorMessage"])
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card user-management-card">
    @* Removed shadow-sm, rounded-3 to inherit from global styles *@
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    @* table-light provides a default light grey, overridden by CSS for consistency *@
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Full Name</th>
                        <th>Current Role (Custom)</th>
                        <th>Identity Role(s)</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Any())
                    {
                        <tr class="no-users-found"><td colspan="6" class="text-center py-4">No users found.</td></tr>
                    }
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.UserName</td>
                            <td>@user.Email</td>
                            <td>@(user.FullName ?? "N/A")</td>
                            <td>
                                <span class="badge bg-info-subtle text-info-emphasis rounded-pill">
                                    @user.CustomRole
                                </span>
                            </td>
                            <td>@(user.CurrentIdentityRoleName ?? "None")</td>
                            <td class="text-center">
                                <a asp-action="EditUserRole" asp-route-id="@user.Id" class="btn btn-sm btn-outline-primary rounded-pill px-3" title="Edit Role"><i class="bi bi-pencil-square"></i>Edit Role</a>
                                @* Other actions like Lock/Unlock, Delete User can be added here *@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>