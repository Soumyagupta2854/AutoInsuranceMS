@model IEnumerable<AutoInsuranceManagementSystem.Models.SupportTicket>
@using AutoInsuranceManagementSystem.Models
@{
    ViewData["Title"] = "My Assigned Tickets";

    // Helper function to determine the style and icon for each ticket status
    (string BadgeClass, string IconClass, string StatusText) GetStatusAppearance(TicketStatus status)
    {
        string statusText = status.ToString().Replace("_", " ");
        return status switch
        {
            TicketStatus.OPEN => ("bg-danger text-white", "bi-exclamation-circle-fill", statusText),
            TicketStatus.IN_PROGRESS => ("bg-warning text-dark", "bi-arrow-repeat", statusText),
            TicketStatus.ON_HOLD => ("bg-secondary text-white", "bi-pause-circle-fill", statusText),
            TicketStatus.RESOLVED => ("bg-success text-white", "bi-check-circle-fill", statusText),
            TicketStatus.CLOSED => ("bg-dark text-white", "bi-lock-fill", statusText),
            _ => ("bg-light text-dark", "bi-question-circle-fill", statusText)
        };
    }
}

<h1 class="display-6">@ViewData["Title"]</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show rounded-3" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show rounded-3" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm rounded-3 mt-4">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Subject</th>
                        <th>Submitted By</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Any())
                    {
                        <tr><td colspan="7" class="text-center py-4">You have no tickets assigned to you.</td></tr>
                    }
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>TIC-@item.TicketId.ToString("D5")</td>
                            <td><a asp-action="Update" asp-route-id="@item.TicketId" class="fw-bold">@item.Subject</a></td>
                            <td>@item.User?.UserName</td>
                            <td>@item.Priority</td>
                            <td>
                                @{
                                    var status = GetStatusAppearance(item.TicketStatus);
                                }
                                <span class="badge d-inline-flex align-items-center gap-1 rounded-pill px-3 py-2 fw-semibold @status.BadgeClass" style="font-size: 0.8rem;">
                                    <i class="@status.IconClass"></i>
                                    <span>@status.StatusText</span>
                                </span>
                            </td>
                            <td>@item.CreatedDate.ToString("yyyy-MM-dd")</td>
                            <td class="text-center">
                                <a asp-action="Update" asp-route-id="@item.TicketId" class="btn btn-sm btn-primary rounded-pill px-3 me-1" title="Update/View"><i class="bi bi-pencil-square"></i> Update</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
