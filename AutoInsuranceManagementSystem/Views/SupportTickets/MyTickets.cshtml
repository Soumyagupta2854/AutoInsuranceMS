@model IEnumerable<AutoInsuranceManagementSystem.Models.SupportTicket>
@using Microsoft.AspNetCore.Identity
@using AutoInsuranceManagementSystem.Models
@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "My Support Tickets";
}

@section Styles {
    <style>
        :root {
            --brand-primary: #007bff;
            --brand-success: #28a745;
            --brand-warning: #ffc107;
            --brand-danger: #dc3545;
            --brand-secondary: #6c757d;
            --brand-light: #f8f9fa;
            --brand-dark: #343a40;
        }

        .page-header {
            padding-bottom: 0.75rem;
            border-bottom: 1px solid #dee2e6;
        }

            .page-header h1 {
                font-family: 'Poppins', sans-serif;
                font-weight: 600;
                color: var(--brand-dark);
            }

        .btn-brand-gradient {
            background-image: linear-gradient(45deg, #198754, #28a745);
            border: none;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.2);
        }

            .btn-brand-gradient:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
            }

        .ticket-card {
            background-color: #fff;
            border: 1px solid #e9ecef;
            border-left-width: 5px;
            margin-bottom: 1.5rem;
            transition: all 0.2s ease-in-out;
        }

            .ticket-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
            }

        .ticket-card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 1.25rem;
            background-color: #f8f9fc;
            border-bottom: 1px solid #e9ecef;
        }

        .ticket-id {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            font-size: 1.1rem;
            color: var(--brand-primary);
        }

        .ticket-subject {
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            font-size: 1.2rem;
            color: var(--brand-dark);
        }

        .ticket-meta {
            font-size: 0.9rem;
            color: #6c757d;
        }

            .ticket-meta .bi {
                vertical-align: -0.15em;
                margin-right: 0.3rem;
            }

        /* Status-specific border colors */
        .ticket-card.status-open {
            border-left-color: var(--brand-danger);
        }

        .ticket-card.status-in-progress {
            border-left-color: var(--brand-warning);
        }

        .ticket-card.status-resolved {
            border-left-color: var(--brand-success);
        }

        .ticket-card.status-closed, .ticket-card.status-on-hold {
            border-left-color: var(--brand-secondary);
        }

        .badge-status {
            display: inline-flex;
            align-items: center;
            font-size: 0.85rem;
            font-weight: 500;
        }

            .badge-status .bi {
                margin-right: 0.4rem;
                font-size: 1.1em;
            }

        .no-tickets-container {
            text-align: center;
            padding: 4rem 2rem;
            background-color: #fff;
            border-radius: 0.75rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }

            .no-tickets-container .icon-bg {
                font-size: 4rem;
                color: #e9ecef;
            }

            .no-tickets-container h3 {
                font-family: 'Poppins', sans-serif;
                font-weight: 600;
                margin-top: 1.5rem;
                color: var(--brand-dark);
            }

            .no-tickets-container p {
                color: #6c757d;
                margin-bottom: 2rem;
            }
    </style>
}

<div class="page-header d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="Create" class="btn btn-success btn-brand-gradient rounded-pill px-4 py-2 text-white"><i class="bi bi-plus-circle-fill me-2"></i>Create New Ticket</a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show rounded-3 mb-4" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show rounded-3 mb-4" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div>
    @if (!Model.Any())
    {
        <div class="no-tickets-container">
            <i class="bi bi-ticket-detailed icon-bg"></i>
            <h3>No Tickets Found</h3>
            <p>You haven't created any support tickets yet. Get started by creating a new one.</p>
            <a asp-action="Create" class="btn btn-success btn-brand-gradient rounded-pill px-4 py-2 text-white"><i class="bi bi-plus-circle-fill me-2"></i>Create Your First Ticket</a>
        </div>
    }
    else
    {
        @foreach (var item in Model)
        {
            string statusClass = item.TicketStatus.ToString().ToLower().Replace("_", "-");
            string statusIcon = "bi-question-circle";
            var statusBadgeBg = "bg-secondary";

            switch (item.TicketStatus)
            {
                case TicketStatus.OPEN:
                    statusIcon = "bi-envelope-open-fill";
                    statusBadgeBg = "bg-danger";
                    break;
                case TicketStatus.IN_PROGRESS:
                    statusIcon = "bi-arrow-repeat";
                    statusBadgeBg = "bg-warning text-dark";
                    break;
                case TicketStatus.RESOLVED:
                    statusIcon = "bi-check-circle-fill";
                    statusBadgeBg = "bg-success";
                    break;
                case TicketStatus.CLOSED:
                    statusIcon = "bi-archive-fill";
                    statusBadgeBg = "bg-secondary";
                    break;
                case TicketStatus.ON_HOLD:
                    statusIcon = "bi-pause-circle-fill";
                    statusBadgeBg = "bg-info text-dark";
                    break;
            }

            <div class="card ticket-card status-@statusClass rounded-3 shadow-sm">
                <div class="ticket-card-header">
                    <span class="ticket-id">TIC-@item.TicketId.ToString("D5")</span>
                    <span class="badge @statusBadgeBg rounded-pill px-3 py-2 badge-status">
                        <i class="bi @statusIcon"></i>
                        @item.TicketStatus.ToString().Replace("_", " ")
                    </span>
                </div>
                <div class="card-body p-4">
                    <h5 class="ticket-subject mb-3">@Html.DisplayFor(modelItem => item.Subject)</h5>
                    <div class="row g-3 ticket-meta">
                        <div class="col-md-6 col-lg-4">
                            <i class="bi bi-person-check-fill text-muted"></i>
                            <strong>Assigned Agent:</strong> @(item.AssignedAgent?.FullName ?? item.AssignedAgent?.UserName ?? "Not Assigned")
                        </div>
                        <div class="col-md-6 col-lg-4">
                            <i class="bi bi-clock-history text-muted"></i>
                            <strong>Last Updated:</strong> @item.LastUpdatedDate.ToLocalTime().ToString("dd MMM, yyyy HH:mm")
                        </div>
                        <div class="col-12 col-lg-4 text-lg-end mt-lg-0">
                            <a asp-action="Details" asp-route-id="@item.TicketId" class="btn btn-sm btn-outline-primary rounded-pill px-3" title="View Details"><i class="bi bi-eye-fill me-1"></i> View Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

