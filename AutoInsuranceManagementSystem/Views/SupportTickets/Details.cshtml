@model AutoInsuranceManagementSystem.Models.SupportTicket
@using Microsoft.AspNetCore.Identity
@using AutoInsuranceManagementSystem.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Support Ticket Details";

    // --- Helper logic for Status ---
    string statusClass = "secondary";
    string statusIcon = "bi-question-circle";
    string statusTextClass = "text-white"; // Default text color for badges

    switch (Model.TicketStatus)
    {
        case TicketStatus.OPEN: statusClass = "danger"; statusIcon = "bi-envelope-open-fill"; break;
        case TicketStatus.IN_PROGRESS: statusClass = "warning"; statusIcon = "bi-arrow-repeat"; statusTextClass = "text-dark"; break;
        case TicketStatus.RESOLVED: statusClass = "success"; statusIcon = "bi-check-circle-fill"; break;
        case TicketStatus.CLOSED: statusClass = "dark"; statusIcon = "bi-archive-fill"; break;
        case TicketStatus.ON_HOLD: statusClass = "info"; statusIcon = "bi-pause-circle-fill"; statusTextClass = "text-dark"; break;
    }
}

@section Styles {
    <style>
        .page-header h1 {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            color: #2c3e50;
        }

        .details-container {
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 0.75rem;
            overflow: hidden; /* Important for border-radius on children */
        }

        .details-header {
            padding: 1.25rem 1.75rem;
            background-color: #f8f9fc;
            border-bottom: 1px solid #dee2e6;
        }

            .details-header .ticket-id {
                font-family: 'Poppins', sans-serif;
                font-weight: 600;
                font-size: 1.5rem;
                color: #343a40;
            }

        .details-body {
            padding: 1.75rem;
        }

        .ticket-subject {
            font-family: 'Poppins', sans-serif;
            font-weight: 700;
            font-size: 2.15rem;
            color: #2c3e50;
            line-height: 1.3;
            margin-bottom: 2rem;
        }

        .metadata-grid .info-block {
            margin-bottom: 1.5rem;
        }

        .metadata-grid .info-label {
            display: flex;
            align-items: center;
            font-family: 'Inter', sans-serif;
            font-weight: 600;
            font-size: 0.85rem;
            color: #6c757d;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.5rem;
        }

            .metadata-grid .info-label .bi {
                font-size: 1.1rem;
                margin-right: 0.6rem;
                color: #8a96a3;
            }

        .metadata-grid .info-value {
            font-size: 1rem;
            font-weight: 500;
            color: #212529;
            padding-left: 1.7rem; /* Align with label text */
        }

        .metadata-grid .badge {
            font-size: 0.9rem;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
        }

            .metadata-grid .badge .bi {
                margin-right: 0.4rem;
            }

        .metadata-grid a.info-value {
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
        }

            .metadata-grid a.info-value:hover {
                text-decoration: underline;
            }

        .section-divider {
            margin-top: 1rem;
            margin-bottom: 2rem;
        }

        .content-section .section-title {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            font-size: 1.25rem;
            color: #343a40;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
        }

            .content-section .section-title .bi {
                color: #007bff;
                margin-right: 0.75rem;
                font-size: 1.5rem;
            }

        .content-section .content-body {
            font-size: 1rem;
            line-height: 1.8;
            color: #343a40;
            white-space: pre-wrap;
            background-color: #f8f9fc;
            padding: 1.5rem;
            border-radius: 0.5rem;
            border: 1px solid #e9ecef;
        }

            .content-section .content-body.notes {
                border-left: 4px solid #0dcaf0;
            }

        .resolution-date {
            display: block;
            font-style: italic;
            font-size: 0.9rem;
            color: #6c757d;
            margin-top: 1rem;
            padding-left: 1.5rem;
        }

    </style>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="page-header">@ViewData["Title"]</h1>
    <div>
        @if (User.IsInRole("Admin") || (User.IsInRole("Agent") && (Model.AssignedAgentId == null || Model.AssignedAgentId.ToString() == UserManager.GetUserId(User))))
        {
            <a asp-action="Update" asp-route-id="@Model.TicketId" class="btn btn-primary rounded-pill px-4 me-2"><i class="bi bi-pencil-fill me-2"></i>Update Ticket</a>
        }
        @if (User.IsInRole("Customer"))
        {
            <a asp-action="MyTickets" class="btn btn-outline-secondary rounded-pill px-4"><i class="bi bi-arrow-left-circle-fill me-2"></i>Back to My Tickets</a>
        }
        else if (User.IsInRole("Admin"))
        {
            <a asp-action="AdminIndex" class="btn btn-outline-secondary rounded-pill px-4"><i class="bi bi-arrow-left-circle-fill me-2"></i>Back to All Tickets</a>
        }
        else if (User.IsInRole("Agent"))
        {
            <a asp-action="AgentQueue" class="btn btn-outline-secondary rounded-pill px-4"><i class="bi bi-arrow-left-circle-fill me-2"></i>Back to Queue</a>
        }
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-xl-10">
        <div class="details-container shadow-sm">
            <div class="details-header">
                <h2 class="ticket-id">Ticket #TIC-@Model.TicketId.ToString("D5")</h2>
            </div>
            <div class="details-body">
                <h3 class="ticket-subject">@Model.Subject</h3>

                <div class="row metadata-grid">
                    <!-- Status -->
                    <div class="col-lg-4 col-md-6 info-block">
                        <span class="info-label"><i class="bi bi-flag-fill"></i>Status</span>
                        <div class="info-value">
                            <span class="badge bg-@statusClass @statusTextClass rounded-pill px-3 py-2">
                                <i class="bi @statusIcon"></i>@Model.TicketStatus.ToString().Replace("_", " ")
                            </span>
                        </div>
                    </div>
                    <!-- Assigned Agent -->
                    <div class="col-lg-4 col-md-6 info-block">
                        <span class="info-label"><i class="bi bi-person-check-fill"></i>Assigned Agent</span>
                        <span class="info-value">@(Model.AssignedAgent?.FullName ?? Model.AssignedAgent?.UserName ?? "Not Assigned")</span>
                    </div>
                    <!-- Submitted By -->
                    <div class="col-lg-4 col-md-6 info-block">
                        <span class="info-label"><i class="bi bi-person-fill"></i>Submitted By</span>
                        <span class="info-value">@(Model.User?.FullName ?? Model.User?.UserName ?? "N/A")</span>
                    </div>
                    <!-- Date Created -->
                    <div class="col-lg-4 col-md-6 info-block">
                        <span class="info-label"><i class="bi bi-calendar-plus-fill"></i>Date Created</span>
                        <span class="info-value">@Model.CreatedDate.ToLocalTime().ToString("dd MMM, yyyy HH:mm")</span>
                    </div>
                    <!-- Last Updated -->
                    <div class="col-lg-4 col-md-6 info-block">
                        <span class="info-label"><i class="bi bi-calendar-check-fill"></i>Last Updated</span>
                        <span class="info-value">@Model.LastUpdatedDate.ToLocalTime().ToString("dd MMM, yyyy HH:mm")</span>
                    </div>
                    <!-- Related Policy -->
                    @if (Model.RelatedPolicy != null)
                    {
                        <div class="col-lg-4 col-md-6 info-block">
                            <span class="info-label"><i class="bi bi-file-earmark-text-fill"></i>Related Policy</span>
                            <a asp-controller="Policies" asp-action="Details" asp-route-id="@Model.RelatedPolicyId" class="info-value">#@Model.RelatedPolicy.PolicyNumber</a>
                        </div>
                    }
                </div>

                <hr class="section-divider" />

                <div class="content-section">
                    <h4 class="section-title"><i class="bi bi-chat-left-text-fill"></i>Issue Description</h4>
                    <p class="content-body">@Model.IssueDescription</p>
                </div>

                @if (!string.IsNullOrEmpty(Model.ResolutionNotes))
                {
                    <hr class="section-divider" />
                    <div class="content-section">
                        <h4 class="section-title"><i class="bi bi-journal-check"></i>Agent Notes &amp; Resolution</h4>
                        <p class="content-body notes">@Model.ResolutionNotes</p>
                        @if (Model.ResolvedDate.HasValue)
                        {
                            <span class="resolution-date">
                                <i class="bi bi-calendar-check"></i>
                                Resolved on: @Model.ResolvedDate.Value.ToLocalTime().ToString("dd MMM, yyyy HH:mm")
                            </span>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>
