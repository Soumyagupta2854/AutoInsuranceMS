@model AutoInsuranceManagementSystem.Models.Policy
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Policy Details";

    // --- Helper logic for Status Badge ---
    string statusClass = "secondary";
    string statusIcon = "bi-question-circle";
    string statusTextClass = "text-white"; // Default text color is white
    switch (Model.PolicyStatus)
    {
        case PolicyStatus.ACTIVE: statusClass = "success"; statusIcon = ""; break; // Icon removed for ACTIVE status
        case PolicyStatus.PENDING_PAYMENT: statusClass = "info"; statusIcon = "bi-hourglass-split"; statusTextClass = "text-dark"; break; // Use dark text on light info bg
        case PolicyStatus.EXPIRED: statusClass = "dark"; statusIcon = "bi-calendar-x-fill"; break;
        case PolicyStatus.CANCELLED: statusClass = "danger"; statusIcon = "bi-x-circle-fill"; break;
    }
}

@section Styles {
    <style>
        .page-header h1 {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            color: #2c3e50;
        }

        .policy-card {
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 0.75rem;
            overflow: hidden;
        }

        .policy-header {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: #fff;
            padding: 2rem;
            text-align: center;
        }

            .policy-header .policy-number {
                font-family: 'Poppins', sans-serif;
                font-weight: 700;
                font-size: 2.5rem;
                line-height: 1.2;
                margin-bottom: 0.25rem;
            }

            .policy-header .policy-offering {
                font-size: 1.1rem;
                opacity: 0.9;
            }

        .policy-body {
            padding: 2rem;
        }

        .section-title {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            font-size: 1.25rem;
            color: #343a40;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
        }

            .section-title .bi {
                color: #007bff;
                margin-right: 0.75rem;
                font-size: 1.5rem;
            }

        .details-grid dt, .details-grid dd {
            padding-top: 0.75rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid #f0f2f5;
        }

        .details-grid dt {
            font-weight: 500;
            color: #6c757d;
        }

        .details-grid dd {
            font-weight: 500;
            color: #212529;
        }

        .details-grid .badge {
            font-size: 0.9rem;
            padding: .5em .9em;
        }

            .details-grid .badge .bi {
                margin-right: 0.4rem;
            }

        .payment-prompt {
            background-color: #fff3cd;
            border: 1px solid #ffeeba;
            border-left: 5px solid #ffc107;
            padding: 1.5rem;
            border-radius: 0.5rem;
        }

        .policy-footer {
            background-color: #f8f9fc;
            padding: 1.25rem 2rem;
            border-top: 1px solid #dee2e6;
        }

    </style>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="page-header">@ViewData["Title"]</h1>
    <div>
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
        {
            <a asp-action="EditInstantiatedPolicy" asp-route-id="@Model.PolicyId" class="btn btn-primary rounded-pill px-4 me-2"><i class="bi bi-pencil-fill me-2"></i>Edit Policy</a>
        }
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Customer"))
        {
            <a asp-action="MyPolicies" class="btn btn-outline-secondary rounded-pill px-4"><i class="bi bi-arrow-left-circle-fill me-2"></i>Back to My Policies</a>
        }
        else if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Agent")))
        {
            <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4"><i class="bi bi-arrow-left-circle-fill me-2"></i>Back to Policies List</a>
        }
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-lg-10">
        <div class="policy-card shadow-sm">
            <div class="policy-header">
                <h2 class="policy-number">@Model.PolicyNumber</h2>
                @if (Model.PolicyOffering != null)
                {
                    <p class="policy-offering mb-0">@Model.PolicyOffering.OfferingName</p>
                }
            </div>
            <div class="policy-body">
                @if (Model.PolicyStatus == PolicyStatus.PENDING_PAYMENT && User.IsInRole("Customer") && Model.Customer?.Id.ToString() == UserManager.GetUserId(User))
                {
                    <div class="payment-prompt text-center mb-4">
                        <h5 class="fw-bold">Your Policy Awaits Activation!</h5>
                        <p class="mb-3">Please complete the payment to activate your insurance coverage.</p>
                        <a asp-controller="Payments" asp-action="InitiatePolicyPayment" asp-route-policyId="@Model.PolicyId" class="btn btn-warning rounded-pill px-4 py-2 fw-bold"><i class="bi bi-credit-card-fill me-2"></i>Pay Now to Activate</a>
                    </div>
                }

                <!-- Policy Holder & Vehicle -->
                <h4 class="section-title"><i class="bi bi-person-badge-fill"></i>Policy Holder & Vehicle</h4>
                <dl class="row details-grid mb-4">
                    @if (Model.Customer != null)
                    {
                        <dt class="col-sm-4 col-md-3">Customer</dt>
                        <dd class="col-sm-8 col-md-9">@(Model.Customer.FullName ?? Model.Customer.UserName)</dd>
                    }
                    <dt class="col-sm-4 col-md-3">Vehicle</dt>
                    <dd class="col-sm-8 col-md-9">@Html.DisplayFor(model => model.VehicleDetails)</dd>
                </dl>

                <!-- Coverage Details -->
                <h4 class="section-title"><i class="bi bi-shield-check"></i>Coverage & Premium</h4>
                <dl class="row details-grid mb-4">
                    <dt class="col-sm-4 col-md-3">Coverage Amount</dt>
                    <dd class="col-sm-8 col-md-9">@Model.ActualCoverageAmount.ToString("C")</dd>
                    <dt class="col-sm-4 col-md-3">Premium Amount</dt>
                    <dd class="col-sm-8 col-md-9">@Model.ActualPremiumAmount.ToString("C")</dd>
                </dl>

                <!-- Policy Period & Status -->
                <h4 class="section-title"><i class="bi bi-calendar3-range"></i>Policy Period & Status</h4>
                <dl class="row details-grid">
                    <dt class="col-sm-4 col-md-3">Start Date</dt>
                    <dd class="col-sm-8 col-md-9">@Model.StartDate.ToString("dd MMMM, yyyy")</dd>
                    <dt class="col-sm-4 col-md-3">End Date</dt>
                    <dd class="col-sm-8 col-md-9">@Model.EndDate.ToString("dd MMMM, yyyy")</dd>
                    <dt class="col-sm-4 col-md-3">Status</dt>
                    <dd class="col-sm-8 col-md-9">
                        <span class="badge bg-@statusClass @statusTextClass rounded-pill">
                            @if (!string.IsNullOrEmpty(statusIcon))
                            {
                                <i class="bi @statusIcon"></i>
                            }
                            @Html.DisplayFor(model => model.PolicyStatus)
                        </span>
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>
